(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{10:function(e,a,i){"use strict";i.r(a);var n=i(0),t=i.n(n),r=i(11);const o={AVX2:"//wikipedia.org/wiki/AVX2",TSC:"//wikipedia.org/wiki/Time_Stamp_Counter",TSC_INVARIANT:"//wikipedia.org/wiki/Time_Stamp_Counter",RDTSCP:"//wikipedia.org/wiki/RDTSC",MSR:"//wikipedia.org/wiki/Model-specific_register",PAE:"//wikipedia.org/wiki/Physical_Address_Extension",PSE:"//wikipedia.org/wiki/Page_Size_Extension",MCE:"//wikipedia.org/wiki/Machine-check_exception",APIC:"//wikipedia.org/wiki/Advanced_Programmable_Interrupt_Controller",MTRR:"//wikipedia.org/wiki/Memory_type_range_register",MCA:"//wikipedia.org/wiki/Machine_Check_Architecture",CMOV:"//wikipedia.org/wiki/CMOV",PAT:"//wikipedia.org/wiki/Page_attribute_table",PSE36:"//wikipedia.org/wiki/PSE-36",SSE:"//wikipedia.org/wiki/Streaming_SIMD_Extensions",SSE2:"//wikipedia.org/wiki/SSE2",HTT:"//wikipedia.org/wiki/Hyper-threading",SSE3:"//wikipedia.org/wiki/SSE3",PCLMULQDQ:"//wikipedia.org/wiki/PCLMULQDQ",SSSE3:"//wikipedia.org/wiki/SSSE3",FMA_instruction_set:"//wikipedia.org/wiki/FMA_instruction_set",SSE4_1:"//wikipedia.org/wiki/SSE4#SSE4.1",SSE4_2:"//wikipedia.org/wiki/SSE4#SSE4.2",AES:"//wikipedia.org/wiki/AES_instruction_set",AVX:"//wikipedia.org/wiki/Advanced_Vector_Extensions",F16C:"//wikipedia.org/wiki/F16C",RDRND:"//wikipedia.org/wiki/RDRAND",FSGSBASE:"//wikipedia.org/wiki/FSGSBASE",BMI1:"//wikipedia.org/wiki/Bit_Manipulation_Instruction_Sets",SMEP:"//wikipedia.org/wiki/Supervisor_mode_execution_protection",BMI2:"//wikipedia.org/wiki/BMI2",RDSEED:"//wikipedia.org/wiki/RDSEED",ADX:"//wikipedia.org/wiki/Intel_ADX",SMAP:"//wikipedia.org/wiki/Supervisor_Mode_Access_Prevention",SHA:"//wikipedia.org/wiki/Intel_SHA_extensions",ABM:"//wikipedia.org/wiki/Bit_Manipulation_Instruction_Sets#ABM",SSE4A:"//wikipedia.org/wiki/SSE4#SSE4a",THREEDNOW:"//wikipedia.org/wiki/3DNow",THREEDNOW_PREFETCH:"//wikipedia.org/wiki/3DNow",POPCNT:"//wikipedia.org/wiki/Hamming_weight",MMX:"//wikipedia.org/wiki/MMX_(instruction_set)",FPU:"//wikipedia.org/wiki/Floating-point_unit",VME:"//wikipedia.org/wiki/Virtual_8086_mode#VME"};i.d(a,"getReferencePoints",(function(){return h})),i.d(a,"renderResults",(function(){return g})),i.d(a,"renderInfo",(function(){return w})),i.d(a,"render",(function(){return k}));const c='\n<div class="col-12 d-flex justify-content-end"><h5>[save]</h5></div>\n<div class="col-12 d-flex justify-content-between"><h2>[cpu]</h2><h2>[score] Points <span class="score [score-class]" title="Faster (green) or slower (orange) than the reference 3900X"></span></h2></div>\n<div class="col-12 col-lg-6" style="margin-top: 50px">\n<h5>Results</h5>\n<table class="table">\n<thead>\n<tr>\n<th>Benchmark</th>\n<th>Score</th>\n</tr>\n</thead>\n<tbody>\n[results]\n</tbody>\n</table>\n</div>\n<div class="col-12 col-lg-6" style="margin-top: 50px">\n<h5>Machine</h5>\n<table class="table">\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n[info]\n</tbody>\n</table>\n</div>\n',s="\n<tr>\n    <td>[name]</td>\n    <td>[value]</td>\n</tr>\n",l='\n<tr [optional-class]>\n    <td>[name]</td>\n    <td>[value] <span class="score [score-class]" title="Faster (green) or slower (orange) than the [reference] of [reference-points]"></span></td>\n</tr>\n';function p(){t()("#accordion").html("<h5>Can't find the specified save!</h5>")}let u=!1,d=null;function h(e,a){let i=5e4;if(!u)return i;if(!Object.keys(d.Results).includes(e))return i;if(!Array.isArray(d.Results[e]))return i;return d.Results[e].forEach((function(e){e.Benchmark===a&&(i=e.Points)})),i}function g(e){let a=[];return Object.keys(e.Results).forEach((function(i){Array.isArray(e.Results[i])&&e.Results[i].forEach((function(e){const n=h(i,e.Benchmark);let t=l.replace("[value]",e.Points).replace("[name]",`${e.Benchmark} @ ${i} ${parseInt(i),"Threads"}`).replace("[score-class]",e.Points>=n?"above":"below").replace("[reference]",u?"average":"reference 3900x").replace("[reference-points]",n);e.Benchmark.startsWith("Category: all")?t=t.replace("[optional-class]",'class="category-all"'):e.Benchmark.startsWith("Category:")&&(t=t.replace("[optional-class]",'class="category"')),a.push(t)}))})),a.sort((function(e,a){const i=e.includes("Category"),n=e.includes("Category: all"),t=a.includes("Category"),r=a.includes("Category: all");return n?-1:r?1:i&&!t?-1:!i&&t?1:0})),a.join("")}function w(e){let a="";a+=s.replace("[name]","Caption").replace("[value]",e.MachineInformation.Cpu.Caption),a+=s.replace("[name]","Vendor").replace("[value]",e.MachineInformation.Cpu.Vendor),a+=s.replace("[name]","Cores").replace("[value]",e.MachineInformation.Cpu.PhysicalCores),a+=s.replace("[name]","Threads").replace("[value]",e.MachineInformation.Cpu.LogicalCores),a+=s.replace("[name]","NUMA").replace("[value]",`${e.MachineInformation.Cpu.Nodes} Node${1===e.MachineInformation.Cpu.Nodes?"":"s"} @ ${e.MachineInformation.Cpu.LogicalCoresPerNode} Threads per Node`),a+=s.replace("[name]","Frequency").replace("[value]",`${(e.MachineInformation.Cpu.MaxClockSpeed/1e3).toFixed(2)} GHz Measured / ${(e.MachineInformation.Cpu.NormalClockSpeed/1e3).toFixed(2)} GHz Reported`),a+=s.replace("[name]","Socket").replace("[value]",e.MachineInformation.Cpu.Socket),a+=s.replace("[name]","BIOS").replace("[value]",`${e.MachineInformation.SmBios.BIOSCodename} ${e.MachineInformation.SmBios.BIOSVersion} by ${e.MachineInformation.SmBios.BIOSVendor}`),a+=s.replace("[name]","Mainboard").replace("[value]",`${e.MachineInformation.SmBios.BoardName} ${e.MachineInformation.SmBios.BoardVersion} by ${e.MachineInformation.SmBios.BoardVendor}`);let i="";e.MachineInformation.Cpu.Cores.forEach((function(a){i+=`#${a.Number.toString().padStart(2,"0")} ${(e.MachineInformation.Cpu.MaxClockSpeed/1e3).toFixed(2)} GHz${(a.Number+1)%3==0?"\n":"\t"}`})),a+=s.replace("[name]","Cores").replace("[value]",`<span style="white-space: pre">${i}</span>`);let n="";e.MachineInformation.Cpu.Caches.forEach((function(e){n+=`${e.Level}\t${e.CapacityHRF}\t${e.Associativity}-way\t${e.TimesPresent}-times\t${1===e.Type?"Instruction":2===e.Type?"Data":""}\n`})),a+=s.replace("[name]","Caches").replace("[value]",`<span style="white-space: pre">${n}</span>`);let t="";return e.MachineInformation.RAMSticks.forEach((function(e,a){t+=`${e.Name?e.Name:a} ${e.CapacityHRF} @ ${e.Speed} Mhz by ${e.Manfucturer}\n`})),a+=s.replace("[name]","RAM").replace("[value]",`<span style="white-space: pre">${t}</span>`),a+=function(e){let a;a+=s.replace("[name]","Feature Flags").replace("[value]",`${e.MachineInformation.Cpu.FeatureFlagsOne},\n        ${e.MachineInformation.Cpu.FeatureFlagsTwo},`),a+=s.replace("[name]","Extended Feature Flags").replace("[value]",`${e.MachineInformation.Cpu.ExtendedFeatureFlagsF7One},\n        ${e.MachineInformation.Cpu.ExtendedFeatureFlagsF7Two},\n        ${e.MachineInformation.Cpu.ExtendedFeatureFlagsF7Three},`),a+=s.replace("[name]","AMD Feature Flags").replace("[value]",`${e.MachineInformation.Cpu.AMDFeatureFlags.ExtendedFeatureFlagsF81One},\n        ${e.MachineInformation.Cpu.AMDFeatureFlags.ExtendedFeatureFlagsF81Two},\n        ${e.MachineInformation.Cpu.AMDFeatureFlags.FeatureFlagsSvm},\n        ${e.MachineInformation.Cpu.AMDFeatureFlags.FeatureFlagsApm},`),a+=s.replace("[name]","Intel Feature Flags").replace("[value]",`${e.MachineInformation.Cpu.IntelFeatureFlags.TPMFeatureFlags}\n\n        ${e.MachineInformation.Cpu.IntelFeatureFlags.ExtendedFeatureFlagsF81One},\n        ${e.MachineInformation.Cpu.IntelFeatureFlags.ExtendedFeatureFlagsF81Two},\n        ${e.MachineInformation.Cpu.IntelFeatureFlags.FeatureFlagsApm},`);for(let e in o)a=a.replace(new RegExp(`([^a-zA-Z0-9_])${e}(?![a-zA-Z0-9_]+)(,?)`,"g"),`$1<a href="${o[e]}" target="_blank">${e}</a>$2`);return a=a.replace(/,? ?NONE(,?)/g,"$1").replace(/,\W*,/g,",").replace(/,\W*<\/td>/g,""),a}(e),a}function k(){t()("#sorting").parent().hide(),t()("#sorting").hide(),t()("#prev").parent().hide();const e=window.location.search.replace("?detail=","");fetch(Object(r.b)(e)).then(a=>{a.ok&&404!==a.status?a.json().then(i=>{fetch(Object(r.b)(`average_${i.MachineInformation.Cpu.Caption.replace(/@/g,"at").replace(/ /g,"_").replace(/,/g,"_")}.automated`)).then(e=>new Promise((i,n)=>{a.ok&&404!==a.status?(u=!0,e.json().then(e=>{d=e,i()}).catch(()=>{i()})):i()})).then(()=>{let a=c.replace(/\[save]/g,e).replace(/\[cpu]/g,i.MachineInformation.Cpu.Name);a=a.replace("[info]",w(i)),a=a.replace("[results]",g(i)),a=a.replace(/\[optional-class]/g,"");let n=Object.keys(i.Results),r=0,o=0;n.forEach((function(e){if(!Array.isArray(i.Results[e]))return;let a=0,n=0;i.Results[e].forEach((function(e){e.Benchmark.startsWith("Category:")||(a+=e.Points,n++)})),r+=a,o+=n}));const s=r/o;a=a.replace(/\[score]/g,isNaN(s)?"0".padStart(5,"0"):s.toFixed(0).padStart(5,"0")),a=a.replace(/\[score-class]/g,isNaN(s)?"below":s<5e4?"below":5e4===s?"same":"above"),t()("#accordion").html(a),t()(".navbar").addClass(i.MachineInformation.Cpu.Vendor)})}).catch(e=>{console.error(e),p()}):p()})}},11:function(e,a,i){"use strict";i.d(a,"b",(function(){return l})),i.d(a,"a",(function(){return p}));const n="https://raw.githubusercontent.com/",t="L3tum",r="CPU-Benchmark-Database",o="master",c="saves",s="aggregations";function l(e){return`${n}${t}/${r}/${o}/${c}/${e}.json`}function p(e){return`${n}${t}/${r}/${o}/${s}/pagination/${e}.json`}}}]);