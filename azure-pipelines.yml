# .NET Core
# Build and test .NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

strategy:
  matrix:
    ubuntu:
      imageName: 'ubuntu-16.04'
      release: 'ubuntu-x64'
      arch: 'x86_64'
    debian:
      imageName: 'ubuntu-16.04'
      release: 'debian-x64'
      arch: 'x86_64'
    mac:
      imageName: 'macos-10.13'
      release: 'osx-x64'
      arch: 'x86_64'
    windows:
      imageName: 'windows-latest'
      release: 'win-x64'
      arch: 'x86_64'
    windows-arm:
      imageName: 'windows-latest'
      release: 'win-arm'
      arch: 'arm'
    windows-arm64:
      imageName: 'windows-latest'
      release: 'win-arm64'
      arch: 'arm'

pool:
  vmImage: $(imageName)

variables:
  solution: '**/*.sln'
  buildConfiguration: 'Release'

steps:

- task: DotNetCoreInstaller@0
  displayName: 'Install .net core 3.0 (preview)'
  inputs:
    version: '3.0.100-preview6-012264'

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: Publish Self Contained .Net Core 3.0 App
  inputs:
    command: publish
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--configuration ${buildConfiguration} -r $(release) --framework netcoreapp3.0 --self-contained true'

- task: DotNetCoreCLI@2
  displayName: Publish Self Contained .Net Core 2.0 App
  condition: ne( $('arch'), 'arm' )
  inputs:
    command: publish
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--configuration ${buildConfiguration} -r $(release) --framework netcoreapp2.0 --self-contained true'

#- task: VSTest@2
#  inputs:
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'
